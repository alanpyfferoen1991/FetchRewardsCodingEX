-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Receipts"
(
    "receiptId" character varying(30) NOT NULL,
    "bonusPointsEarned" numeric,
    "bonusPointsEarnedReason" character varying(200),
    "createDate" time without time zone,
    "dateScanned" time without time zone,
    "finishedDate" time without time zone,
    "modifyDate" time without time zone,
    "pointsAwardedDate" time without time zone,
    "pointsEarned" numeric,
    "purchaseDate" time without time zone,
    "purchasedItemCount" numeric,
    "ReceiptItemListId" character varying(40),
    "rewardsReceiptStatus" character varying(10),
    "totalSpent" numeric,
    "userId" character varying(30) NOT NULL,
    PRIMARY KEY ("receiptId")
);

CREATE TABLE IF NOT EXISTS public.users
(
    "userId" character varying(30) NOT NULL,
    active boolean,
    "createdDate" time without time zone,
    "lastLogin" time without time zone,
    role character varying(15),
    "signUpSource" character varying(15),
    state character varying(2),
    PRIMARY KEY ("userId")
);

CREATE TABLE IF NOT EXISTS public."ReceiptItemList"
(
    "ReceiptItemListId" character varying(40) NOT NULL,
    "partnerItemId" numeric NOT NULL,
    "rewardsProductPartnerId" character varying(30),
    "pointsPayerId" character varying(30),
    "metabriteCampaignId" character varying(70),
    "userFlaggedPrice" numeric,
    "pointsEarned" numeric,
    "competitiveProduct" boolean,
    "needsFetchReview" boolean,
    "finalPrice" numeric,
    "targetPrice" numeric,
    "discountedItemPrice" numeric,
    "originalFinalPrice" numeric,
    "itemPrice" numeric,
    description character varying(200),
    "needsFetchReviewReason" character varying(200),
    "rewardsGroup" character varying(100),
    "quantityPurchased" numeric,
    "priceAfterCoupon" numeric,
    "userFlaggedDescription" character varying(200),
    "userFlaggedBarcode" numeric,
    "pointsNotAwardedReason" character varying(200),
    "originalMetaBriteBarcode" character varying(50),
    "originalMetaBriteItemPrice" numeric,
    "originalMetaBriteDescription" character varying(200),
    barcode character varying(50),
    "competitorTargetGapPoints" numeric,
    "brandCode" character varying(50),
    "itemNumber" numeric,
    "originalMetaBriteQuantityPurchased" numeric,
    "userFlaggedNewItem" boolean,
    "originalReceiptItemText" character varying(200),
    "userFlaggedQuantity" numeric,
    "preventTargetGapPoints" boolean,
    CONSTRAINT "rewardsReceiptItemList_fkey" PRIMARY KEY ("ReceiptItemListId", "partnerItemId")
);

CREATE TABLE IF NOT EXISTS public."Brands"
(
    "brandsId" character varying(30) NOT NULL,
    barcode character varying(15),
    category character varying(30),
    "categoryCode" character varying(30),
    cpg character varying(30),
    "brandCode" character varying(50),
    name character varying(100),
    "topBrand" boolean,
    PRIMARY KEY ("brandsId")
);

ALTER TABLE IF EXISTS public."Receipts"
    ADD FOREIGN KEY ("userId")
    REFERENCES public.users ("userId") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


END;